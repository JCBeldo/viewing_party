---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=&include_adult=true&language=en-US&page=1&query=Transformers
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 401
      message: Unauthorized
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 18 Jul 2023 03:10:09 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=300
      X-Cache:
      - Error from cloudfront
      Via:
      - 1.1 ba82151bf51e4c722c5305c983d8b71e.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - Ze7qYBdOd9kGGteAk3eeyoY7gHIhzSBcOW491fRFw7Egtug7VUtOkQ==
      Vary:
      - Origin
    body:
      encoding: UTF-8
      string: '{"status_code":7,"status_message":"Invalid API key: You must be granted
        a valid key.","success":false}

        '
  recorded_at: Tue, 18 Jul 2023 03:10:09 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=22e2d7c3a554f28d25ba38e8393b8f5d&include_adult=true&language=en-US&page=1&query=Transformers
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 18 Jul 2023 03:12:01 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=27346
      X-Memc:
      - HIT
      X-Memc-Key:
      - 5df8203724e959bc4ea03f3a333ded4e
      X-Memc-Age:
      - '1126'
      X-Memc-Expires:
      - '21018'
      Etag:
      - W/"90ae6122fbdf88ede0d6310d4e44c2fd"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e3e94284a800d30d02bd662be67e1bf2.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - 0TOuvLaTt1LZ7UI40XFloaUYDySHVfugJ45s40SoEfPCIYNjDa0_8A==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 18 Jul 2023 03:12:01 GMT
recorded_with: VCR 6.2.0
